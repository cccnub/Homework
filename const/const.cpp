// const.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>
// 네가 넣어준 값을 바꿀 생각이 없다.
// const 를 붙이지 않는다면, 오히려 다른 사람들은
// 값이 바뀌어서 나온다고 생각하게 된다. 
// 나중에 커다란 자료형들을 8바이트로 넘겨받기 위해
// 포인터를 쓰게 된다. 
void Test(const char* _Ptr)
    {//800만 번지 
    putchar(*_Ptr);

    
    }

// const로 개발자의 의도를 알 수 있다. 
// 대놓고 네가 넣어준 값을 바꿀거야 라고 선언한것
void Test2(char* _Ptr)
{
    //이런식으로 만든다면 안에서 값을 변경해줘야 하는것
    //안바꾸면 노매너, 안에서 바뀌어서 나올거라고 생각하게 됨.
}

int main()
{
    //const가 붙게되면
    //뒤에 붙은 자료형의 메모리 영역을 비트적 상수화 시킨다.
    //어려워 보이지만 4바이트의 비트하나도 바꿀수 없다.
    //값을 바꿀 수 없다고 생각하면 된다. (어떤 수정도 할 수 없다.)
    //값을 바꿔야 되는 것에는 const 를 쓰지 않으며
    //값을 바꾸지 말아야 할 것에는 const 를 쓰게 된다. 
    
    int Value = 0;

    //바꿀수 없는 정수의 포인터
    //const int* Ptr = &Value;
    
    //int * Ptr = &Value;
    //바꿀수 있는 정수의 포인터 

    //100번지
    int Value1 = 0;
    //200번지
    int Value2 = 0;
    //300번지에 100번지 
    int* const Ptr = &Value1;
    //300번지에 200번지 
    //주소값을 바꿀 수 없다. 
    //Ptr = &Value2; 불가능      
    
   
   

    
    
    char a = 'a';

    Test(&a);


}

